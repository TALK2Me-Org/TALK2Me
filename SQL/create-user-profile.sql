-- Create user_profile table
-- This table stores psychological profile of users generated by AI
-- based on conversations and memories

CREATE TABLE IF NOT EXISTS user_profile (
  user_id uuid PRIMARY KEY REFERENCES users(id) ON DELETE CASCADE,
  attachment_style text,
  dominujące_schematy text[],
  język_miłości text[],
  styl_komunikacji text,
  rola text,
  dzieciństwo text,
  aktualne_wyzywania text,
  cykliczne_wzorce text[],
  last_updated timestamp WITH TIME ZONE DEFAULT NOW()
);

-- Add comment to table
COMMENT ON TABLE user_profile IS 'Psychological profile of users - attachment styles, schemas, communication patterns etc.';

-- Add comments to columns
COMMENT ON COLUMN user_profile.user_id IS 'Reference to users table';
COMMENT ON COLUMN user_profile.attachment_style IS 'Attachment style (secure, anxious, avoidant, disorganized)';
COMMENT ON COLUMN user_profile.dominujące_schematy IS 'Dominant psychological schemas';
COMMENT ON COLUMN user_profile.język_miłości IS 'Love languages preferences';
COMMENT ON COLUMN user_profile.styl_komunikacji IS 'Communication style';
COMMENT ON COLUMN user_profile.rola IS 'Life role/archetype';
COMMENT ON COLUMN user_profile.dzieciństwo IS 'Childhood patterns and experiences';
COMMENT ON COLUMN user_profile.aktualne_wyzywania IS 'Current life challenges';
COMMENT ON COLUMN user_profile.cykliczne_wzorce IS 'Cyclical behavior patterns';
COMMENT ON COLUMN user_profile.last_updated IS 'Last profile update timestamp';

-- Create index for faster lookups
CREATE INDEX idx_user_profile_user_id ON user_profile(user_id);

-- Create trigger to update last_updated on changes
CREATE OR REPLACE FUNCTION update_user_profile_timestamp()
RETURNS TRIGGER AS $$
BEGIN
  NEW.last_updated = NOW();
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER update_user_profile_timestamp_trigger
BEFORE UPDATE ON user_profile
FOR EACH ROW
EXECUTE FUNCTION update_user_profile_timestamp();

-- Grant permissions
GRANT ALL ON user_profile TO authenticated;
GRANT SELECT ON user_profile TO anon;